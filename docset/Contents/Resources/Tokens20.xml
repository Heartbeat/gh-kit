<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSFileManager(GHUtils).html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSFileManager</TokenIdentifier>
			<Abstract>Utilities for NSFileManager, for example, file size, exists, generating temporary or unique
file paths.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>
			
			<NodeRef refid="20"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_fileSize:error:</TokenIdentifier>
			<Abstract>Get size of file.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSNumber *)gh_fileSize:(NSString *)filePath error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>filePath</Name>
					<Abstract>Path</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract>Out error</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>File size</Abstract></ReturnValue>
			<Anchor>//api/name/gh_fileSize:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_isDirectory:</TokenIdentifier>
			<Abstract>Check if path is a directory.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)gh_isDirectory:(NSString *)filePath</Declaration>
			<Parameters>
				<Parameter>
					<Name>filePath</Name>
					<Abstract>Path</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES if directory, NO otherwise</Abstract></ReturnValue>
			<Anchor>//api/name/gh_isDirectory:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_exist:</TokenIdentifier>
			<Abstract>Check if path exists.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)gh_exist:(NSString *)filePath</Declaration>
			<Parameters>
				<Parameter>
					<Name>filePath</Name>
					<Abstract>Path</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES if exists, NO otherwise</Abstract></ReturnValue>
			<Anchor>//api/name/gh_exist:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_temporaryFile:deleteIfExists:error:</TokenIdentifier>
			<Abstract>Get path to temporary file.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)gh_temporaryFile:(NSString *)appendPath deleteIfExists:(BOOL)deleteIfExists error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>appendPath</Name>
					<Abstract>Path to append to temporary directory name, if not nil</Abstract>
				</Parameter><Parameter>
					<Name>deleteIfExists</Name>
					<Abstract>Will delete existing file if it is in the way</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract>If not nil, will be set if an error occurs</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Path for temporary file</Abstract></ReturnValue>
			<Anchor>//api/name/gh_temporaryFile:deleteIfExists:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_uniquePathWithNumber:</TokenIdentifier>
			<Abstract>Get unique filename based on the specified path.
If file does not exist, the same object is returned.
If file does exist a unique variation is returned.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)gh_uniquePathWithNumber:(NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract>Path</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>If, for example, foo.txt already exists, will return foo-1.txt, and if that exists foo-2.txt, and so on.</Abstract></ReturnValue>
			<Anchor>//api/name/gh_uniquePathWithNumber:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_ensureDirectoryExists:created:error:</TokenIdentifier>
			<Abstract>Ensure directory exists.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)gh_ensureDirectoryExists:(NSString *)directory created:(BOOL *)created error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>directory</Name>
					<Abstract>Directory</Abstract>
				</Parameter><Parameter>
					<Name>created</Name>
					<Abstract>Set if was created</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract>If not nil, will set if error occurs</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES If directory exists or was created</Abstract></ReturnValue>
			<Anchor>//api/name/gh_ensureDirectoryExists:created:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSFileManager/gh_pathToResource:</TokenIdentifier>
			<Abstract>Path to resource in main bundle.</Abstract>
			<DeclaredIn>GHNSFileManager+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)gh_pathToResource:(NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract>Path</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Full path in resource in main bundle.</Abstract></ReturnValue>
			<Anchor>//api/name/gh_pathToResource:</Anchor>
		</Token>
		
	</File>
</Tokens>