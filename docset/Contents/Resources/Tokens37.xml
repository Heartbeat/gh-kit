<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSUserDefaults(GHUtils).html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSUserDefaults</TokenIdentifier>
			<Abstract>Utilities for URLs, for example, encoding, escaping, parsing, splitting out or sorting query params, and more.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>
			
			<NodeRef refid="37"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_containsKey:</TokenIdentifier>
			<Abstract>Check if user defaults contains key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (BOOL)gh_containsKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>YES if defaults contains key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_containsKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_boolForKey:withDefault:</TokenIdentifier>
			<Abstract>BOOL for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (BOOL)gh_boolForKey:(id)key withDefault:(BOOL)defaultValue</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>BOOL for key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_boolForKey:withDefault:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_setBool:forKey:</TokenIdentifier>
			<Abstract>Set BOOL for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (void)gh_setBool:(BOOL)b forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>b</Name>
					<Abstract>Bool</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_setBool:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_doubleForKey:withDefault:</TokenIdentifier>
			<Abstract>Double for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (double)gh_doubleForKey:(NSString *)key withDefault:(double)defaultValue</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter><Parameter>
					<Name>defaultValue</Name>
					<Abstract>Value if not in defaults</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>double for key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_doubleForKey:withDefault:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_setDouble:forKey:</TokenIdentifier>
			<Abstract>Set double for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (void)gh_setDouble:(double)d forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>d</Name>
					<Abstract>Double</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_setDouble:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_integerForKey:withDefault:</TokenIdentifier>
			<Abstract>Integer for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)gh_integerForKey:(NSString *)key withDefault:(NSInteger)defaultValue</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter><Parameter>
					<Name>defaultValue</Name>
					<Abstract>Value if not in defaults</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Integer for key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_integerForKey:withDefault:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_setInteger:forKey:</TokenIdentifier>
			<Abstract>Set integer for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (void)gh_setInteger:(NSInteger)integer forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>integer</Name>
					<Abstract>Integer</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_setInteger:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_objectForKey:withDefault:</TokenIdentifier>
			<Abstract>Object for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (id)gh_objectForKey:(NSString *)key withDefault:(id)defaultValue</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter><Parameter>
					<Name>defaultValue</Name>
					<Abstract>Value if not in defaults</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_objectForKey:withDefault:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_setObjectAsData:forKey:</TokenIdentifier>
			<Abstract>Set object (stored as NSData) for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (void)gh_setObjectAsData:(id)obj forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>obj</Name>
					<Abstract>Object (should be NSCoding)</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Object from data for key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_setObjectAsData:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSUserDefaults/gh_objectFromDataForKey:</TokenIdentifier>
			<Abstract>Object from data for key.</Abstract>
			<DeclaredIn>GHNSUserDefaults+Utils.h</DeclaredIn>			
			
			<Declaration>- (id)gh_objectFromDataForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Key</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Object from data for key</Abstract></ReturnValue>
			<Anchor>//api/name/gh_objectFromDataForKey:</Anchor>
		</Token>
		
	</File>
</Tokens>