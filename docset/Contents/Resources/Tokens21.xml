<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSInvocation(GHUtils_GHKIT).html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSInvocation</TokenIdentifier>
			<Abstract>Invocation helper.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>
			
			<NodeRef refid="21"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeOnMainThread:</TokenIdentifier>
			<Abstract>Invoke on main thread.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>- (void)gh_invokeOnMainThread:(BOOL)waitUntilDone</Declaration>
			<Parameters>
				<Parameter>
					<Name>waitUntilDone</Name>
					<Abstract>Whether to join on the call</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeOnMainThread:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeWithTarget:selector:withObjects:</TokenIdentifier>
			<Abstract>Invoke target selector with multiple arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (id)gh_invokeWithTarget:(id)target selector:(SEL)selector withObjects</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Invocation target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Method</Abstract>
				</Parameter><Parameter>
					<Name>withObjects</Name>
					<Abstract>(Variable) Arguments list</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeWithTarget:selector:withObjects:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeWithTarget:selector:arguments:</TokenIdentifier>
			<Abstract>Invoke target selector with multiple arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (id)gh_invokeWithTarget:(id)target selector:(SEL)selector arguments:(NSArray *)arguments</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Invocation target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Method</Abstract>
				</Parameter><Parameter>
					<Name>arguments</Name>
					<Abstract>Arguments list</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeWithTarget:selector:arguments:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeWithTarget:selector:afterDelay:arguments:</TokenIdentifier>
			<Abstract>Invoke target selector with multiple arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (id)gh_invokeWithTarget:(id)target selector:(SEL)selector afterDelay:(NSTimeInterval)afterDelay arguments:(NSArray *)arguments</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Invocation target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Method</Abstract>
				</Parameter><Parameter>
					<Name>afterDelay</Name>
					<Abstract>Time interval for delay (in seconds)</Abstract>
				</Parameter><Parameter>
					<Name>arguments</Name>
					<Abstract>Arguments list</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeWithTarget:selector:afterDelay:arguments:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeTargetOnMainThread:selector:waitUntilDone:withObjects:</TokenIdentifier>
			<Abstract>Invoke target selector on main thread with multiple arguments.
Use [NSNull null] for nil arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (void)gh_invokeTargetOnMainThread:(id)target selector:(SEL)selector waitUntilDone:(BOOL)waitUntilDone withObjects</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Action</Abstract>
				</Parameter><Parameter>
					<Name>waitUntilDone</Name>
					<Abstract>Whether to wait for call to finish</Abstract>
				</Parameter><Parameter>
					<Name>withObjects</Name>
					<Abstract>Nil terminated list of (object) arguments; Use [NSNull null] for nil arguments</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeTargetOnMainThread:selector:waitUntilDone:withObjects:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeTargetOnMainThread:selector:waitUntilDone:arguments:</TokenIdentifier>
			<Abstract>Invoke target selector on main thread with multiple arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (void)gh_invokeTargetOnMainThread:(id)target selector:(SEL)selector waitUntilDone:(BOOL)waitUntilDone arguments:(NSArray *)arguments</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Action</Abstract>
				</Parameter><Parameter>
					<Name>waitUntilDone</Name>
					<Abstract>Whether to wait for call to finish</Abstract>
				</Parameter><Parameter>
					<Name>arguments</Name>
					<Abstract>Arguments list</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeTargetOnMainThread:selector:waitUntilDone:arguments:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invokeTargetOnMainThread:selector:waitUntilDone:afterDelay:arguments:</TokenIdentifier>
			<Abstract>Invoke target selector on main thread with multiple arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (void)gh_invokeTargetOnMainThread:(id)target selector:(SEL)selector waitUntilDone:(BOOL)waitUntilDone afterDelay:(NSTimeInterval)delay arguments:(NSArray *)arguments</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Action</Abstract>
				</Parameter><Parameter>
					<Name>waitUntilDone</Name>
					<Abstract>Whether to wait for call to finish</Abstract>
				</Parameter><Parameter>
					<Name>arguments</Name>
					<Abstract>Arguments list</Abstract>
				</Parameter><Parameter>
					<Name>afterDelay</Name>
					<Abstract>Time interval for delay (in seconds)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invokeTargetOnMainThread:selector:waitUntilDone:afterDelay:arguments:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invocationWithTarget:selector:hasReturnValue:withObjects:</TokenIdentifier>
			<Abstract>Create invocation with variable arguments.
Use [NSNull null] for nil arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSInvocation *)gh_invocationWithTarget:(id)target selector:(SEL)selector hasReturnValue:(BOOL *)hasReturnValue withObjects</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract>Invocation target</Abstract>
				</Parameter><Parameter>
					<Name>selector</Name>
					<Abstract>Method</Abstract>
				</Parameter><Parameter>
					<Name>hasReturnValue</Name>
					<Abstract>Will be set to YES, if there is a return value</Abstract>
				</Parameter><Parameter>
					<Name>withObjects</Name>
					<Abstract>(Variable) Arguments list</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invocationWithTarget:selector:hasReturnValue:withObjects:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSInvocation/gh_invocationWithTarget:selector:hasReturnValue:arguments:</TokenIdentifier>
			<Abstract>Create invocation with variable arguments.
Use [NSNull null] for nil arguments.</Abstract>
			<DeclaredIn>GHNSInvocation+Utils.h</DeclaredIn>			
			
			<Declaration>+ (NSInvocation *)gh_invocationWithTarget selector:(SEL)selector hasReturnValue:(BOOL *)hasReturnValue arguments:(NSArray *)arguments</Declaration>
			<Parameters>
				<Parameter>
					<Name>selector</Name>
					<Abstract>Method</Abstract>
				</Parameter><Parameter>
					<Name>hasReturnValue</Name>
					<Abstract>Will be set to YES, if there is a return value</Abstract>
				</Parameter><Parameter>
					<Name>arguments</Name>
					<Abstract>Arguments array</Abstract>
				</Parameter><Parameter>
					<Name>target</Name>
					<Abstract>Invocation target</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/gh_invocationWithTarget:selector:hasReturnValue:arguments:</Anchor>
		</Token>
		
	</File>
</Tokens>