<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSString(GHSymlinksAndAliases).html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSString</TokenIdentifier>
			<Abstract>For resolving symlinks and aliases.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByResolvingSymlinksAndAliases</TokenIdentifier>
			<Abstract>Tries to make a standardized, absolute path from the current string,
resolving any aliases or symlinks in the path.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByResolvingSymlinksAndAliases</Declaration>
			
			<ReturnValue><Abstract>Returns the fully resolved path (if possible) or nil (if resolution fails)</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByResolvingSymlinksAndAliases</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByIterativelyResolvingSymlinkOrAlias</TokenIdentifier>
			<Abstract>Resolves the path where the final component could be a symlink and any
component could be an alias.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByIterativelyResolvingSymlinkOrAlias</Declaration>
			
			<ReturnValue><Abstract>Returns the resolved path</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByIterativelyResolvingSymlinkOrAlias</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByResolvingAlias</TokenIdentifier>
			<Abstract>Attempts to resolve the single alias at the end of the path.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByResolvingAlias</Declaration>
			
			<ReturnValue><Abstract>Returns the resolved alias or self if path wasn't an alias or couldn't
resolved.</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByResolvingAlias</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByResolvingSymlink</TokenIdentifier>
			<Abstract>Attempts to resolve the single symlink at the end of the path.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByResolvingSymlink</Declaration>
			
			<ReturnValue><Abstract>Returns the resolved path or self if path wasn't a symlink or couldn't be
resolved.</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByResolvingSymlink</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByConditionallyResolvingSymlink</TokenIdentifier>
			<Abstract>Attempt to resolve the symlink pointed to by the path.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByConditionallyResolvingSymlink</Declaration>
			
			<ReturnValue><Abstract>Returns the resolved path (if it was a symlink and resolution is possible) otherwise nil</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByConditionallyResolvingSymlink</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString/gh_stringByConditionallyResolvingAlias</TokenIdentifier>
			<Abstract>Attempt to resolve the alias pointed to by the path.</Abstract>
			<DeclaredIn>GHNSString+SymlinksAndAliases.h</DeclaredIn>			
			
			<Declaration>- (NSString *)gh_stringByConditionallyResolvingAlias</Declaration>
			
			<ReturnValue><Abstract>Returns the resolved path (if it was an alias and resolution is possible) otherwise nil</Abstract></ReturnValue>
			<Anchor>//api/name/gh_stringByConditionallyResolvingAlias</Anchor>
		</Token>
		
	</File>
</Tokens>